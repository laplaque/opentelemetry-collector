# OpenTelemetry Collector Test Suite Configuration
receivers:
  # OTLP Receiver - supports both gRPC and HTTP
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:${OTLP_GRPC_PORT}"
      http:
        endpoint: "0.0.0.0:${OTLP_HTTP_PORT}"

  # Optional: Prometheus receiver for testing metric scraping
  prometheus:
    config:
      scrape_configs:
        - job_name: 'test-metrics'
          static_configs:
            - targets: ['localhost:${PROMETHEUS_PORT}']

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    
  memory_limiter:
    limit_mib: 512
    check_interval: 5s
    
  resource:
    attributes:
      - key: test.collector.name
        value: "otel-testsuite"
        action: insert

exporters:
  # File exporter for test verification
  file:
    path: "${OUTPUT_DIR}/metrics.json"
    
  # Console exporter for debugging
  debug:
    verbosity: detailed
    
  # Prometheus exporter for metrics inspection
  prometheus:
    endpoint: "0.0.0.0:${PROMETHEUS_EXPORT_PORT}"
    

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [file, debug]
      
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, batch, resource]
      exporters: [file, debug, prometheus]
      
  extensions: [health_check]

extensions:
  health_check:
    endpoint: "0.0.0.0:${HEALTH_CHECK_PORT}"
